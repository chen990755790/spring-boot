<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mapper.loanmanagement.ProjectCounterpartyInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.ProjectCounterpartyInfo" >
    <id column="CounterpartyId" property="counterpartyId" jdbcType="INTEGER" />
    <result column="ProjectId" property="projectId" jdbcType="INTEGER" />
    <result column="TradingParticipantsType" property="tradingParticipantsType" jdbcType="INTEGER" />
    <result column="TradingParticipantsTypeText" property="tradingParticipantsTypeText" jdbcType="NVARCHAR" />
    <result column="TradingCompanyName" property="tradingCompanyName" jdbcType="NVARCHAR" />
    <result column="TradingCompanyCode" property="tradingCompanyCode" jdbcType="NVARCHAR" />
    <result column="TradingCompanyRating" property="tradingCompanyRating" jdbcType="NVARCHAR" />
    <result column="CreatedUser" property="createdUser" jdbcType="NVARCHAR" />
    <result column="CreatedTime" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="ModifedTime" property="modifedTime" jdbcType="TIMESTAMP" />
    <result column="SessionId" property="sessionId" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CounterpartyId, ProjectId, TradingParticipantsType, TradingParticipantsTypeText, 
    TradingCompanyName, TradingCompanyCode, TradingCompanyRating, CreatedUser, CreatedTime, 
    ModifedTime, SessionId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.model.Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ProjectCounterpartyInfo
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ProjectCounterpartyInfo
    where CounterpartyId = #{counterpartyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ProjectCounterpartyInfo
    where CounterpartyId = #{counterpartyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.model.ProjectCounterpartyInfo" >
    insert into ProjectCounterpartyInfo (CounterpartyId, ProjectId, TradingParticipantsType, 
      TradingParticipantsTypeText, TradingCompanyName, 
      TradingCompanyCode, TradingCompanyRating, 
      CreatedUser, CreatedTime, ModifedTime, 
      SessionId)
    values (#{counterpartyId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{tradingParticipantsType,jdbcType=INTEGER}, 
      #{tradingParticipantsTypeText,jdbcType=NVARCHAR}, #{tradingCompanyName,jdbcType=NVARCHAR}, 
      #{tradingCompanyCode,jdbcType=NVARCHAR}, #{tradingCompanyRating,jdbcType=NVARCHAR}, 
      #{createdUser,jdbcType=NVARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, #{modifedTime,jdbcType=TIMESTAMP}, 
      #{sessionId,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.ProjectCounterpartyInfo" >
    insert into ProjectCounterpartyInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="counterpartyId != null" >
        CounterpartyId,
      </if>
      <if test="projectId != null" >
        ProjectId,
      </if>
      <if test="tradingParticipantsType != null" >
        TradingParticipantsType,
      </if>
      <if test="tradingParticipantsTypeText != null" >
        TradingParticipantsTypeText,
      </if>
      <if test="tradingCompanyName != null" >
        TradingCompanyName,
      </if>
      <if test="tradingCompanyCode != null" >
        TradingCompanyCode,
      </if>
      <if test="tradingCompanyRating != null" >
        TradingCompanyRating,
      </if>
      <if test="createdUser != null" >
        CreatedUser,
      </if>
      <if test="createdTime != null" >
        CreatedTime,
      </if>
      <if test="modifedTime != null" >
        ModifedTime,
      </if>
      <if test="sessionId != null" >
        SessionId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="counterpartyId != null" >
        #{counterpartyId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="tradingParticipantsType != null" >
        #{tradingParticipantsType,jdbcType=INTEGER},
      </if>
      <if test="tradingParticipantsTypeText != null" >
        #{tradingParticipantsTypeText,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyName != null" >
        #{tradingCompanyName,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyCode != null" >
        #{tradingCompanyCode,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyRating != null" >
        #{tradingCompanyRating,jdbcType=NVARCHAR},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=NVARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifedTime != null" >
        #{modifedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionId != null" >
        #{sessionId,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.ProjectCounterpartyInfo" >
    update ProjectCounterpartyInfo
    <set >
      <if test="projectId != null" >
        ProjectId = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="tradingParticipantsType != null" >
        TradingParticipantsType = #{tradingParticipantsType,jdbcType=INTEGER},
      </if>
      <if test="tradingParticipantsTypeText != null" >
        TradingParticipantsTypeText = #{tradingParticipantsTypeText,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyName != null" >
        TradingCompanyName = #{tradingCompanyName,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyCode != null" >
        TradingCompanyCode = #{tradingCompanyCode,jdbcType=NVARCHAR},
      </if>
      <if test="tradingCompanyRating != null" >
        TradingCompanyRating = #{tradingCompanyRating,jdbcType=NVARCHAR},
      </if>
      <if test="createdUser != null" >
        CreatedUser = #{createdUser,jdbcType=NVARCHAR},
      </if>
      <if test="createdTime != null" >
        CreatedTime = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifedTime != null" >
        ModifedTime = #{modifedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionId != null" >
        SessionId = #{sessionId,jdbcType=NVARCHAR},
      </if>
    </set>
    where CounterpartyId = #{counterpartyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.ProjectCounterpartyInfo" >
    update ProjectCounterpartyInfo
    set ProjectId = #{projectId,jdbcType=INTEGER},
      TradingParticipantsType = #{tradingParticipantsType,jdbcType=INTEGER},
      TradingParticipantsTypeText = #{tradingParticipantsTypeText,jdbcType=NVARCHAR},
      TradingCompanyName = #{tradingCompanyName,jdbcType=NVARCHAR},
      TradingCompanyCode = #{tradingCompanyCode,jdbcType=NVARCHAR},
      TradingCompanyRating = #{tradingCompanyRating,jdbcType=NVARCHAR},
      CreatedUser = #{createdUser,jdbcType=NVARCHAR},
      CreatedTime = #{createdTime,jdbcType=TIMESTAMP},
      ModifedTime = #{modifedTime,jdbcType=TIMESTAMP},
      SessionId = #{sessionId,jdbcType=NVARCHAR}
    where CounterpartyId = #{counterpartyId,jdbcType=INTEGER}
  </update>
</mapper>